---
title: Maps

---




```{r}
library(tidyverse)
library(janitor)
library(httr)
library(ggmap)
```


# Intro

My issue list includes a task to map the Fl Absences data set.


## Get the Data
```{r get-data}
url <- 'http://www.fldoe.org/core/fileparse.php/7584/urlt/1516ABS21DAYSchool.xls' #location of data on the internet


httr::GET(url, write_disk(absences <- tempfile(fileext = ".xls"))) #obtain the spreadsheet file from the internet




```

## Read the data
```{r read-clean-spreadsheet}
absences_2 <- readxl::read_excel(absences, skip =2) #read the spreadsheet file and skip the first two rows



absences_2 <- janitor::clean_names(absences_2) #Change column names with the Janitor.


absences_2 <- dplyr::rename(absences_2, "absent_21_plus" = "absent_21_days_or_over") #Change name again to shorten 

absences_2 <- dplyr::select(absences_2, 2, 4:6) #select columsn of interest




```

## Clean and Convert the data
```{r convet-to-numeric}

absences_2$enrollments <- as.numeric(absences_2$enrollments) #Change data to numeric format
absences_2$absent_21_plus <- as.numeric(absences_2$absent_21_plus) #change data to numeric format



```

## Make my own percents
```{r convert-to-percent}

absences_2 <- dplyr::mutate(absences_2, percent = absent_21_plus / enrollments) 


#calculate percent 
absences_2 <- dplyr::mutate(absences_2, percent = percent *100) #Convert from decimal 


```

## Summary Stats for plotting
```{r summary-stats-absent_21}
absent_21 <- absences_2 %>%
  group_by(district_name) %>%
  summarise(mean = mean(percent, na.rm = TRUE))



absent_21$mean <- round(absent_21$mean, 2)

absent_21
```

## Maps

### Get Florida Map
```{r states}
states <- map_data("state")
fl_df <- subset(states, region == "florida")

```


This chunks sets up how to overlay county boundaries over the Florida map. 

```{r county-boundaries}
counties <- map_data("county")
fl_county <- subset(counties, region == "florida")

```

This will us a map of Florida

```{r fl_base}
fl_base <- ggplot(data = fl_df, mapping = aes(x = long, y = lat, group = group)) + 
  coord_fixed(1.3) + 
  geom_polygon(color = "black", fill = "gray")
fl_base + theme_nothing()

```

```{r fl_base-fl-county}
fl_base + theme_nothing() + 
  geom_polygon(data = fl_county, fill = NA, color = "white") +
  geom_polygon(color = "black", fill = NA)  # get the state border back on top
```


## Back to the educational set

School districts in Florida pretty much align with Florida Counties. However, there is nuance between the map data and the school district data. 

This chunk renames the district_name to match the name in the map data and matches the case. 

```{r}
absent_21_c <- absent_21 %>%
  rename("subregion" = "district_name") #match name with map data in preperation of joining. 

absent_21_c$subregion <- tolower(absent_21_c$subregion) #make lowercase

absent_21_c


```

## Use the ani-join to determine issues with merging

```{r}

non_match <- anti_join(fl_county, absent_21_c, by = "subregion")

non_match


```

Not all the names match; so a touchup of subregion names is called for. 

```{r fix-subregion-non-match-names}

absent_21_c$subregion <- gsub("dade", "miami-dade", fixed = TRUE, absent_21_c$subregion)

absent_21_c$subregion <- gsub("desoto", "de soto", fixed = TRUE, absent_21_c$subregion)

absent_21_c$subregion <- gsub("st. johns", "st johns", fixed = TRUE, absent_21_c$subregion)

absent_21_c$subregion <- gsub("st. lucie", "st lucie", fixed = TRUE, absent_21_c$subregion)




```



### Join Forces

Put the 

```{r map-d }

map_d <- inner_join(fl_county, absent_21_c, by = "subregion") #join map data and educational data



```


# Map Set Up

This is where I started to blindly  follow.  In essence, what this chunk is doing is setting up the parameters of the theme. 

```{r}

ditch_the_axes <- theme(
  axis.text = element_blank(),
  axis.line = element_blank(),
  axis.ticks = element_blank(),
  panel.border = element_blank(),
  panel.grid = element_blank(),
  axis.title = element_blank()
  )


```



```{r}

fl_abs <- fl_base + 
      geom_polygon(data = map_d, aes(fill = mean), color = "white") +
      geom_polygon(color = "black", fill = NA) +
      theme_bw() +
      ditch_the_axes

fl_abs

```


```{r}
fl_abs_2 <- fl_abs + 
    scale_fill_gradientn(colours = rev(rainbow(7)),
                         breaks = c(2, 4, 10, 100, 1000, 10000),
                         trans = "log10")
fl_abs_2
```

